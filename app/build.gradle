plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.beautyorder.androidclient"
        minSdk 24
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resourceConfigurations += ["en", "en-rGB", "fr", "ja", "b+zh+Hans+MO", "b+zh+Hant+MO"]
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }

    splits {

        // Configures multiple APKs based on ABI.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that you only
            // want some specific APKs. Resets the list of ABIs for Gradle to create APKs for to none.
            reset()

            // Specifies a list of ABIs for Gradle to create APKs for.
            include "armeabi-v7a", "arm64-v8a", "armeabi"

            // Specifies that you want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'

    def camerax_version = "1.0.0-beta07"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha14"
    implementation 'androidx.compose.ui:ui-graphics:1.0.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation "androidx.leanback:leanback:1.1.0-rc02"
    implementation "androidx.leanback:leanback-preference:1.1.0-rc01"
    // leanback-paging is an add-on that simplifies adding paging support to a RecyclerView Adapter.
    implementation "androidx.leanback:leanback-paging:1.1.0-alpha08"
    // leanback-tab is an add-on that provides customized TabLayout to be used as the top navigation bar.
    implementation "androidx.leanback:leanback-tab:1.1.0-beta01"

    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'com.github.MKergall:osmbonuspack:6.9.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.mlkit:barcode-scanning:17.0.3'
    implementation 'org.osmdroid:osmdroid-android:6.1.14'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:3.2.4"
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.0.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    // Add the dependency for the Cloud Storage library.
    implementation 'com.google.firebase:firebase-storage'
    // Add the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics'

    // APIs for SplashScreen, including compatibility helpers on devices prior Android 12
    /*implementation "androidx.core:core-splashscreen:1.0.0-alpha01"*/
}